*** Settings ***
Documentation     This robot file includes all common keywords related to virtual storage
Library           SSHLibrary
Library           HttpLibrary.HTTP

*** Keywords ***
Add Replicted Pool
    [Arguments]    ${pool_name}    ${rep_num}    ${osd_ids}
    Return Code Should be 0    /cgi-bin/ezs3/json/pool_create?pool_name=${pool_name}&pool_type=1&settings=%7B%22r%22%3A%22${rep_num}%22%7D
    Return Code Should be 0    /cgi-bin/ezs3/json/auto_reweight_set?pool=${pool_name}&threshold=0
    Return Code Should be 0    /cgi-bin/ezs3/json/pool_add_node?pool_id=${pool_name}&node_ids=${osd_ids}

Add Shared Folder
    [Arguments]    ${name}    ${gateway_group}=Default    ${nfs}=true    ${smb}=true    ${read_only}=false    ${s3_folder}=false    ${bucket}=    ${mode}=sync    ${hidden}=false
    ...    ${write_list}=    ${smb_allowed_hosts}=    ${nfs_allowed_hosts}=    ${guest_ok}=false    ${guest_only}=false    ${user_list}=    ${cephfs}=cephfs    ${pool}=data
    ...    ${migrate_folder}=false    ${migrate_gw_ip}=    ${migrate_server}=    ${migrate_fs_type}=cifs    ${migrate_windows_host}=false    ${migrate_path}=    ${migrate_copyup}=open
    ...    ${migrate_account}=    ${migrate_passwd}=    ${migrate_cifsacl}=false    ${migrate_fs_options}=    
    Return Code Should be 0    /cgi-bin/ezs3/json/create_shared_folder?name=${name}&gateway_group=${gateway_group}&nfs=${nfs}&smb=${smb}&read_only=${read_only}&s3_folder=${s3_folder}&bucket=${bucket}&mode=${mode}&hidden=${hidden}&write_list=${write_list}&smb_allowed_hosts=${smb_allowed_hosts}&nfs_allowed_hosts=${nfs_allowed_hosts}&guest_ok=${guest_ok}&guest_only=${guest_only}&user_list=${user_list}&cephfs=${cephfs}&pool=${pool}&migrate_folder=${migrate_folder}&migrate_gw_ip=${migrate_gw_ip}&migrate_server=${migrate_server}&migrate_fs_type=${migrate_fs_type}&migrate_windows_host=${migrate_windows_host}&migrate_path=${migrate_path}&migrate_copyup=${migrate_copyup}&migrate_account=${migrate_account}&migrate_passwd=${migrate_passwd}&migrate_cifsacl=${migrate_cifsacl}&migrate_fs_options=${migrate_fs_options}

Add Virtual Storage
    [Arguments]    ${vs_name}    ${vs_pool}    ${vs_gateway}
    Return Code Should be 0    /cgi-bin/ezs3/json/gwgroup_create?name=${vs_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/sds_set_pool?gateway_group=${vs_name}&pool_list=${vs_pool}
    Return Code Should be 0    /cgi-bin/ezs3/json/gwgroup_assign?group=${vs_name}&hosts=${vs_gateway}

Add iSCSI Target
    [Arguments]    ${gateway_group}=Default    ${target_id}=
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_add_target?gateway_group=${gateway_group}&target_id=${target_id}

Add iSCSI Volume
    [Arguments]    ${gateway_group}=Default    ${pool_id}=Default    ${target_id}=    ${iscsi_id}=    ${size}=    ${allowed_initiator_groups}=    ${allowed_initiators}=
    ...    ${qos_enabled}=false    ${snapshot_enabled}=false    ${allow_all}=true    ${logical_bs}=512    ${physical_bs}=4096
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_add?allow_all=${allow_all}&allowed_initiators=${allowed_initiators}&allowed_initiator_groups=${allowed_initiator_groups}&gateway_group=${gateway_group}&iscsi_id=${iscsi_id}&logical_bs=${logical_bs}&physical_bs=${physical_bs}&pool=${pool_id}&qos_enabled=${qos_enabled}&size=${size}&snapshot_enabled=${snapshot_enabled}&target_id=${target_id}

Assign Gateway to Virtual Storage
    [Arguments]    ${vs_name}    ${gateway_ip}
    Return Code Should be 0    /cgi-bin/ezs3/json/gwgroup_assign?group=${vs_name}&hosts=${gateway_ip}

Assign Pool to Virtual Storage
    [Arguments]    ${vs_name}    ${pool_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/sds_set_pool?gateway_group=${vs_name}&pool_list=${pool_name}

Ctdb Should Be OK
    [Arguments]    ${ok_num}
    ${output}=    Execute Command    ctdb status
    Should Contain X Times    ${output}    OK    ${ok_num}

Delete Pool
    [Arguments]    ${pool_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/pool_delete?pool_name=${pool_name}

Delete Shared Folder
    [Arguments]    ${vs_name}    ${folder_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/delete_multi_shared_folder?name_list=${folder_name}&gateway_group=${vs_name}

Delete iSCSI LUN
    [Arguments]    ${vs_name}    ${iscsi_target_name}    ${iscsi_lun_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_multi_remove?gateway_group=${vs_name}&iscsi_id_list=${iscsi_lun_name}&target_id=${iscsi_target_name}

Delete iSCSI Target
    [Arguments]    ${vs_name}    ${iscsi_target_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_remove_target?gateway_group=${vs_name}&target_id=${iscsi_target_name}

Disable Shared Folder
    [Arguments]    ${name_list}    ${gateway_group}=Default
    Return Code Should be 0    /cgi-bin/ezs3/json/disable_multi_shared_folder?name_list=${name_list}&gateway_group=${gateway_group}

Disable iSCSI LUN
    [Arguments]    ${vs_name}    ${iscsi_target_name}    ${iscsi_lun_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_multi_disable?gateway_group=${vs_name}&iscsi_id_list=${iscsi_lun_name}&target_id=${iscsi_target_name}

Enable Shared Folder
    [Arguments]    ${name_list}    ${gateway_group}=Default
    Return Code Should be 0    /cgi-bin/ezs3/json/enable_multi_shared_folder?name_list=${name_list}&gateway_group=${gateway_group}

Enable iSCSI LUN
    [Arguments]    ${vs_name}    ${iscsi_target_name}    ${iscsi_lun_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_multi_enable?gateway_group=${vs_name}&iscsi_id_list=${iscsi_lun_name}&target_id=${iscsi_target_name}

Modify Shared Folder
    [Arguments]    ${name}    ${gateway_group}=Default    ${nfs}=true    ${smb}=true    ${read_only}=false    ${mode}=sync
    ...    ${write_list}=    ${smb_allowed_hosts}=    ${nfs_allowed_hosts}=    ${guest_ok}=true    ${user_list}=
    Post Return Code Should be 0    name=${name}&gateway_group=${gateway_group}&nfs=${nfs}&smb=${smb}&read_only=${read_only}&mode=${mode}&write_list=${write_list}&smb_allowed_hosts=${smb_allowed_hosts}&nfs_allowed_hosts=${nfs_allowed_hosts}&guest_ok=${guest_ok}&user_list=${user_list}    /cgi-bin/ezs3/json/edit_shared_folder

Modify iSCSI LUN
    [Arguments]    ${allow_all}=true    ${allowed_initiator_groups}=    ${allowed_initiators}=    ${gateway_group}=Default    ${iscsi_id}=    
    ...    ${pool}=Default    ${qos_enabled}=false    ${size}=    ${snapshot_enabled}=false    ${target_id}=    ${read_maxbw}=
    ...    ${read_maxiops}=    ${write_maxbw}=    ${write_maxiops}=
    Run Keyword If    '${qos_enabled}'=='false'    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_change?allow_all=${allow_all}&allowed_initiator_groups=${allowed_initiator_groups}&allowed_initiators=${allowed_initiators}&gateway_group=${gateway_group}&iscsi_id=${iscsi_id}&pool=${pool}&qos_enabled=${qos_enabled}&size=${size}&snapshot_enabled=${snapshot_enabled}&target_id=${target_id}
    ...    ELSE    Return Code Should be 0    /cgi-bin/ezs3/json/iscsi_change?allow_all=${allow_all}&allowed_initiator_groups=${allowed_initiator_groups}&allowed_initiators=${allowed_initiators}&gateway_group=${gateway_group}&iscsi_id=${iscsi_id}&pool=${pool}&qos_enabled=${qos_enabled}&size=${size}&snapshot_enabled=${snapshot_enabled}&target_id=${target_id}&read_maxbw=${read_maxbw}&read_maxiops=${read_maxiops}&write_maxbw=${write_maxbw}&write_maxiops=${write_maxiops}

Remove Virtual Storage
    [Arguments]    ${vs_name}
    Return Code Should be 0    /cgi-bin/ezs3/json/gwgroup_delete?name=${vs_name}

Create Cephfs
    [Arguments]    ${gateway_group}    ${fs_name}    ${data_pool}    ${mdata_pool}    ${enable_fscache}=false    ${selected_gateway}=@{STORAGEIP}[1]    ${selected_cache_disk}=sda4    ${cache_size}=    ${cache_use_whole_disk}=false
    ${selected_cache_disk_urlencode}=    URL JSON Encode    ${selected_cache_disk}
    Set Request Body    gateway_group=${gateway_group}&fs_name=${fs_name}&data_pool=${data_pool}&mdata_pool=${mdata_pool}&enable_fscache=${enable_fscache}&selected_gateway=${selected_gateway}&selected_cache_disk=%2Fdev%2F${selected_cache_disk}&cache_size=${cache_size}&cache_use_whole_disk=${cache_use_whole_disk}    
    POST    /cgi-bin/ezs3/json/create_cephfs
    Response Status Code Should Equal    200 OK

Enable Cephfs
    [Arguments]    ${gateway_group}    ${fs_name}
    Set Request Body    gateway_group=${gateway_group}&cephfs_name=${fs_name}
    POST    /cgi-bin/ezs3/json/enable_mds_to_cephfs
    Response Status Code Should Equal    200 OK

Disable Cephfs
    [Arguments]    ${gateway_group}    ${fs_name}
    Set Request Body    gateway_group=${gateway_group}&cephfs_name=${fs_name}
    POST    /cgi-bin/ezs3/json/disable_mds_on_cephfs
    Response Status Code Should Equal    200 OK

Delete Cephfs
    [Arguments]    ${gateway_group}    ${fs_name}
    ${cephfs_list}=    Create List    ${fs_name}
    ${scephfs_list_urlencode}=    URL JSON Encode    ${cephfs_list}
    Set Request Body    gateway_group=${gateway_group}&cephfs_list=${scephfs_list_urlencode}
    POST    /cgi-bin/ezs3/json/delete_cephfs
    Response Status Code Should Equal    200 OK

Get Cephfs
    [Arguments]    ${gateway_group}    ${fs_name}
    ${cephfs_list}=    Get Return Json    /cgi-bin/ezs3/json/list_ceph_filesystems?gateway_group=${gateway_group}    /response
    ${cephfs_parse}=    Parse Json    ${cephfs_list}
    ${length}=    Get Length    ${cephfs_parse}
    :FOR    ${INDEX}    IN RANGE    0    ${length}
    \    ${cephfs_exist}=    Run Keyword IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    ...    Set Variable    True
    \    ...    ELSE    Set Variable    False
    \    Exit For Loop IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    log    ${cephfs_parse[${INDEX}]['name']}
    Should Be True    ${cephfs_exist}

Get Cephfs Out
    [Arguments]    ${gateway_group}    ${fs_name}
    ${cephfs_list}=    Get Return Json    /cgi-bin/ezs3/json/list_ceph_filesystems?gateway_group=${gateway_group}    /response
    ${cephfs_parse}=    Parse Json    ${cephfs_list}
    ${length}=    Get Length    ${cephfs_parse}
    :FOR    ${INDEX}    IN RANGE    0    ${length}
    \    ${cephfs_exist}=    Run Keyword IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    ...    Set Variable    True
    \    ...    ELSE    Set Variable    False
    \    Exit For Loop IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    log    ${cephfs_parse[${INDEX}]['name']}
    Should Not Be True    ${cephfs_exist}

Get Cephfs Status
    [Arguments]    ${gateway_group}    ${fs_name}    ${status}=online
    ${cephfs_list}=    Get Return Json    /cgi-bin/ezs3/json/list_ceph_filesystems?gateway_group=${gateway_group}    /response
    ${cephfs_parse}=    Parse Json    ${cephfs_list}
    ${length}=    Get Length    ${cephfs_parse}
    :FOR    ${INDEX}    IN RANGE    0    ${length}
    \    ${cephfs_status}=    Run Keyword IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    ...    Set Variable    ${cephfs_parse[${INDEX}]['status']}
    \    ...    ELSE    Set Variable    False
    \    Exit For Loop IF    '${cephfs_parse[${INDEX}]['name']}' == '${fs_name}'
    \    log    ${cephfs_parse[${INDEX}]['name']}
    \    log    ${cephfs_parse[${INDEX}]['status']}
    Should Be Equal As Strings    ${cephfs_status}    ${status}
